{"version":3,"sources":["features/manageNotice.ts","components/atoms/DeleteButton.tsx","containers/atoms/DeleteButton.tsx","components/pages/Notify.tsx","containers/pages/Notify.tsx","components/atoms/AddButton.tsx","containers/atoms/AddButton.tsx","containers/molecules/SwitchingButton.tsx","components/organisms/ShowResult.tsx","containers/organisms/ShowResult.tsx","components/pages/RecommendTalk.tsx","data/dummy-data.ts","containers/pages/RecommendTalk.tsx","components/pages/SearchTalk.tsx","containers/pages/SearchTalk.tsx","components/pages/MenuBar.tsx","public/sorry.webp","components/pages/NotFound.tsx","components/pages/NotifyTimer.tsx","containers/pages/NotifyTimer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["noticeSlice","createSlice","name","initialState","noticeList","reducers","addedTalk","state","action","payload","id","deletedTalk","DeleteButton","talk","title","speaker","date","genre","content","time","label","deleteTalk","Button","color","variant","onClick","EnhancedDeleteButton","dispatch","useDispatch","t","actions","useStyles","makeStyles","createStyles","table","maxWidth","Notify","notices","classes","result","Object","values","map","Date","TableRow","TableCell","getMonth","getDate","getHours","getMinutes","TableContainer","Table","className","aria-label","TableBody","EnhancedNotify","useSelector","AddButton","addTalk","EnhancedAddButton","SwitchingButton","ShowResult","talks","EnhancedShowResult","form","minWidth","large","fontSize","RecommendTalk","interestedGenre1","interestedGenre2","interestedGenre3","recommendedResult","handleGenreChange1","handleGenreChange2","handleGenreChange3","search","align","FormControl","Select","value","onChange","item","MenuItem","interest","toString","fu","en","hr","wo","ma","ba","cp","de","EnhancedRecommendTalk","useState","setInterestedGenre1","setInterestedGenre2","setInterestedGenre3","setResult","event","target","filter","score","SearchTalk","selectedGenre","selectedDate","searchedResult","handleGenreChange","handleDateChange","EnhancedSearchTalk","setSelectedGenre","setSelectedDate","some","MenuBar","size","component","RouterLink","to","Search","Done","Notifications","Divider","NotFound","src","sorry","alt","NotifyTimer","permitted","Alert","severity","EnhancedNotifyTimer","setPermission","notifiedTalk","setNotified","useEffect","Push","Permission","request","timer","setInterval","_notices","_notifiedTalk","upcomingTalk","now","Math","abs","getTime","length","forEach","create","timeout","catch","e","console","error","check","clearInterval","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","err","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a0c95560.chunk.js","sourcesContent":["/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport type { Talk } from '../data/dummy-data';\n\nexport type NoticeState = {\n  noticeList: { [id: string]: Talk };\n};\n\nexport const noticeSlice = createSlice({\n  name: 'notice',\n  initialState: { noticeList: {} } as NoticeState,\n  reducers: {\n    addedTalk: (state, action: PayloadAction<Talk>) => {\n      state.noticeList[action.payload.id] = { ...action.payload };\n    },\n    deletedTalk: (state, action: PayloadAction<Talk>) => {\n      delete state.noticeList[action.payload.id];\n    },\n  },\n});\n","import { FC } from 'react';\nimport { Button } from '@material-ui/core';\nimport type { Talk } from '../../data/dummy-data';\n\ntype Props = {\n  talk: Talk;\n  deleteTalk: (talk: Talk) => void;\n};\n\nconst DeleteButton: FC<Props> = ({\n  talk = {\n    id: '',\n    title: '',\n    speaker: '',\n    date: '',\n    genre: [],\n    content: '',\n    time: '',\n    label: {},\n  },\n  deleteTalk = () => undefined,\n}) => (\n  <>\n    <Button\n      color=\"secondary\"\n      variant=\"contained\"\n      onClick={() => deleteTalk(talk)}\n    >\n      削除\n    </Button>\n  </>\n);\n\nexport default DeleteButton;\n","import { FC } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { noticeSlice } from '../../features/manageNotice';\nimport DeleteButton from '../../components/atoms/DeleteButton';\nimport type { Talk } from '../../data/dummy-data';\n\ntype Props = {\n  talk: Talk;\n};\n\nconst EnhancedDeleteButton: FC<Props> = ({\n  talk = {\n    id: '',\n    title: '',\n    speaker: '',\n    date: '',\n    genre: [],\n    content: '',\n    time: '',\n    label: {},\n  },\n}) => {\n  const dispatch = useDispatch();\n\n  return (\n    <DeleteButton\n      talk={talk}\n      deleteTalk={(t: Talk) => dispatch(noticeSlice.actions.deletedTalk(t))}\n    />\n  );\n};\n\nexport default EnhancedDeleteButton;\n","import { FC } from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n} from '@material-ui/core';\n\nimport DeleteButton from '../../containers/atoms/DeleteButton';\nimport type { Talk } from '../../data/dummy-data';\nimport './Notify.css';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    table: {\n      maxWidth: 1000,\n    },\n  }),\n);\n\ntype Props = {\n  notices: { [id: string]: Talk };\n};\n\nconst Notify: FC<Props> = ({ notices = {} }) => {\n  const classes = useStyles();\n\n  const result = Object.values(notices).map((talk) => {\n    const time = new Date(talk.time);\n\n    return (\n      <TableRow key={talk.id}>\n        <TableCell>{talk.title}</TableCell>\n        <TableCell>{talk.speaker}</TableCell>\n        <TableCell>\n          {time.getMonth() + 1}月 {time.getDate()}日 {time.getHours()}時{' '}\n          {time.getMinutes()}分\n        </TableCell>\n        <TableCell>\n          <DeleteButton talk={talk} />\n        </TableCell>\n      </TableRow>\n    );\n  });\n\n  return (\n    <>\n      <TableContainer>\n        <Table className={classes.table} aria-label=\"table\">\n          <TableBody>\n            <TableRow key=\"header\">\n              <TableCell>\n                <span className=\"itemTitleText\">タイトル</span>\n              </TableCell>\n              <TableCell>\n                <span className=\"itemTitleText\">講演者</span>\n              </TableCell>\n              <TableCell>\n                <span className=\"itemTitleText\">時間</span>\n              </TableCell>\n              <TableCell>\n                <span className=\"itemTitleText\">削除</span>\n              </TableCell>\n            </TableRow>\n            {result}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </>\n  );\n};\n\nexport default Notify;\n","import { FC } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { NoticeState } from '../../features/manageNotice';\nimport Notify from '../../components/pages/Notify';\nimport type { Talk } from '../../data/dummy-data';\n\nconst EnhancedNotify: FC = () => {\n  const notices = useSelector<NoticeState, { [id: string]: Talk }>(\n    (state) => state.noticeList,\n  );\n\n  return <Notify notices={notices} />;\n};\n\nexport default EnhancedNotify;\n","import { FC } from 'react';\nimport { Button } from '@material-ui/core';\nimport type { Talk } from '../../data/dummy-data';\n\ntype Props = {\n  talk: Talk;\n  addTalk?: (talk: Talk) => void;\n};\n\nconst AddButton: FC<Props> = ({\n  talk = {\n    id: '',\n    title: '',\n    speaker: '',\n    date: '',\n    genre: [],\n    content: '',\n    time: '',\n    label: {},\n  },\n  addTalk = () => undefined,\n}) => (\n  <>\n    <Button color=\"primary\" variant=\"contained\" onClick={() => addTalk(talk)}>\n      追加\n    </Button>\n  </>\n);\n\nexport default AddButton;\n","import { FC } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { noticeSlice } from '../../features/manageNotice';\nimport AddButton from '../../components/atoms/AddButton';\nimport type { Talk } from '../../data/dummy-data';\n\ntype Props = {\n  talk: Talk;\n};\n\nconst EnhancedAddButton: FC<Props> = ({\n  talk = {\n    id: '',\n    title: '',\n    speaker: '',\n    date: '',\n    genre: [],\n    content: '',\n    time: '',\n    label: {},\n  },\n}) => {\n  const dispatch = useDispatch();\n\n  return (\n    <AddButton\n      talk={talk}\n      addTalk={(t: Talk) => dispatch(noticeSlice.actions.addedTalk(t))}\n    />\n  );\n};\n\nexport default EnhancedAddButton;\n","import { FC } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { NoticeState } from '../../features/manageNotice';\nimport AddButton from '../atoms/AddButton';\nimport DeleteButton from '../atoms/DeleteButton';\nimport type { Talk } from '../../data/dummy-data';\n\ntype Props = {\n  talk: Talk;\n};\n\nconst SwitchingButton: FC<Props> = ({\n  talk = {\n    id: '',\n    title: '',\n    speaker: '',\n    date: '',\n    genre: [],\n    content: '',\n    time: '',\n    label: {},\n  },\n}) => {\n  const notices = useSelector<NoticeState, { [id: string]: Talk }>(\n    (state) => state.noticeList,\n  );\n\n  if (talk.id in notices) {\n    return <DeleteButton talk={talk} />;\n  }\n\n  return <AddButton talk={talk} />;\n};\n\nexport default SwitchingButton;\n","import { FC } from 'react';\n\nimport SwitchingButton from '../../containers/molecules/SwitchingButton';\nimport type { Talk } from '../../data/dummy-data';\nimport './ShowResult.css';\n\ntype Props = {\n  talks: Talk[];\n};\n\nconst ShowResult: FC<Props> = ({ talks = [] }) => {\n  const result = talks.map((talk) => {\n    const time = new Date(talk.time);\n\n    return (\n      <div key={talk.id} className=\"talkBlock\">\n        <div className=\"itemBlock\">\n          <div className=\"itemTitleText\"> タイトル</div> {talk.title}\n        </div>\n        <div className=\"itemBlock\">\n          <div className=\"itemTitleText\">講演者</div>\n          {talk.speaker}\n        </div>\n        <div className=\"itemBlock\">\n          <div className=\"itemTitleText\">時間</div> {time.getMonth() + 1}月{' '}\n          {time.getDate()}日 {time.getHours()}時 {time.getMinutes()}分\n        </div>\n        <div className=\"itemBlock\">\n          <div className=\"itemTitleText\">内容</div> {talk.content}\n        </div>\n        <div>\n          <SwitchingButton talk={talk} />\n        </div>\n      </div>\n    );\n  });\n\n  return <>{result}</>;\n};\n\nexport default ShowResult;\n","import { FC } from 'react';\nimport ShowResult from '../../components/organisms/ShowResult';\nimport type { Talk } from '../../data/dummy-data';\n\ntype Props = {\n  talks: Talk[];\n};\n\nconst EnhancedShowResult: FC<Props> = ({ talks = [] }) => (\n  <ShowResult talks={talks} />\n);\n\nexport default EnhancedShowResult;\n","import { FC } from 'react';\nimport {\n  Button,\n  FormControl,\n  Select,\n  MenuItem,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n} from '@material-ui/core';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\n\nimport ShowResult from '../../containers/organisms/ShowResult';\nimport type { Item, Talk } from '../../data/dummy-data';\nimport './RecommendTalk.css';\n\ntype Props = {\n  genre: Item[];\n  interestedGenre1: string;\n  interestedGenre2: string;\n  interestedGenre3: string;\n  recommendedResult: Talk[];\n  handleGenreChange1: (event: React.ChangeEvent<{ value: unknown }>) => void;\n  handleGenreChange2: (event: React.ChangeEvent<{ value: unknown }>) => void;\n  handleGenreChange3: (event: React.ChangeEvent<{ value: unknown }>) => void;\n  search: () => void;\n};\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    form: {\n      minWidth: 120,\n    },\n    table: {\n      maxWidth: 600,\n    },\n    large: {\n      fontSize: 'large',\n    },\n  }),\n);\n\nconst RecommendTalk: FC<Props> = ({\n  genre = [],\n  interestedGenre1 = '',\n  interestedGenre2 = '',\n  interestedGenre3 = '',\n  recommendedResult = [],\n  handleGenreChange1 = () => undefined,\n  handleGenreChange2 = () => undefined,\n  handleGenreChange3 = () => undefined,\n  search = () => undefined,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <TableContainer>\n        <Table className={classes.table} aria-label=\"table\">\n          <TableBody>\n            <TableRow key=\"genre1\">\n              <TableCell className={classes.large}>気になる(1)</TableCell>\n              <TableCell align=\"right\">\n                <span className=\"second-column\">\n                  <FormControl className={classes.form}>\n                    <Select\n                      value={interestedGenre1}\n                      onChange={handleGenreChange1}\n                    >\n                      {genre.map((item) => (\n                        <MenuItem value={item.id} key={item.id}>\n                          {item.name}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n                </span>\n              </TableCell>\n            </TableRow>\n            <TableRow key=\"genre2\">\n              <TableCell className={classes.large}>気になる(2)</TableCell>\n              <TableCell align=\"right\">\n                <span className=\"second-column\">\n                  <FormControl className={classes.form}>\n                    <Select\n                      value={interestedGenre2}\n                      onChange={handleGenreChange2}\n                    >\n                      {genre.map((item) => (\n                        <MenuItem value={item.id} key={item.id}>\n                          {item.name}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n                </span>\n              </TableCell>\n            </TableRow>\n            <TableRow key=\"genre3\">\n              <TableCell className={classes.large}>気になる(3)</TableCell>\n              <TableCell align=\"right\">\n                <span className=\"second-column\">\n                  <FormControl className={classes.form}>\n                    <Select\n                      value={interestedGenre3}\n                      onChange={handleGenreChange3}\n                    >\n                      {genre.map((item) => (\n                        <MenuItem value={item.id} key={item.id}>\n                          {item.name}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n                </span>\n              </TableCell>\n            </TableRow>\n            <TableRow key=\"searchrow\">\n              <TableCell />\n              <TableCell align=\"right\">\n                <Button\n                  className={classes.large}\n                  color=\"primary\"\n                  variant=\"contained\"\n                  onClick={search}\n                >\n                  検索\n                </Button>\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <ShowResult talks={recommendedResult} />\n    </>\n  );\n};\n\nexport default RecommendTalk;\n","export type Item = {\n  name: string;\n  id: string;\n};\n\nexport type Talk = {\n  id: string;\n  title: string;\n  speaker: string;\n  date: string;\n  genre: string[];\n  content: string;\n  time: string;\n  label: {\n    [id: string]: number;\n  };\n};\n\nexport const genre: Item[] = [\n  {\n    name: 'Web',\n    id: 'we',\n  },\n  {\n    name: 'ゲーム',\n    id: 'ga',\n  },\n  {\n    name: '競技プログラミング',\n    id: 'cp',\n  },\n  {\n    name: '機械学習',\n    id: 'ml',\n  },\n  {\n    name: 'ビジネス',\n    id: 'bu',\n  },\n  {\n    name: '就活',\n    id: 'hr',\n  },\n  {\n    name: 'エンジニア',\n    id: 'en',\n  },\n  {\n    name: 'その他',\n    id: 'ot',\n  },\n];\n\nexport const interest: Item[] = [\n  {\n    name: '実際に何か動いているところを見たい',\n    id: 'de',\n  },\n  {\n    name: '起業したい',\n    id: 'en',\n  },\n  {\n    name: '競技プログラミングが好き',\n    id: 'cp',\n  },\n  {\n    name: '何か作りたい',\n    id: 'ma',\n  },\n  {\n    name: '就活の役に立てたい',\n    id: 'hr',\n  },\n  {\n    name: '女性エンジニアの話を聞きたい',\n    id: 'wo',\n  },\n  {\n    name: 'これからの社会に興味がある',\n    id: 'fu',\n  },\n  {\n    name: '企業の裏側が知りたい',\n    id: 'ba',\n  },\n];\n\nexport const date: Item[] = [\n  {\n    name: '3/11',\n    id: 'day1',\n  },\n  {\n    name: '3/12',\n    id: 'day2',\n  },\n  {\n    name: '3/13',\n    id: 'day3',\n  },\n];\n\nexport const talks: Talk[] = [\n  {\n    id: '1-a-1330',\n    title: 'これからの社会の変化と若者に求められるあり方とは',\n    speaker: '松尾豊',\n    genre: ['ot'],\n    content: 'hogehoge',\n    date: 'day1',\n    time: new Date(2021, 2, 11, 13, 30).toString(),\n    label: {\n      fu: 1.0,\n      en: 0.7,\n      hr: 0.3,\n    },\n  },\n  {\n    id: '1-b-1330',\n    title: '「オタ駆動開発」で夢を叶える',\n    speaker: '千代田まどか',\n    genre: ['en'],\n    content: 'hogehoge',\n    date: 'day1',\n    time: new Date(2021, 2, 11, 13, 30).toString(),\n    label: {\n      wo: 1.0,\n      hr: 0.7,\n      ma: 0.3,\n    },\n  },\n  {\n    id: '1-c-1330',\n    title: '高専エンジニアの学生起業25年史',\n    speaker: '田中邦裕',\n    genre: ['bu', 'en'],\n    content: 'hogehoge',\n    date: 'day1',\n    time: new Date(2021, 2, 11, 13, 30).toString(),\n    label: {\n      en: 1.0,\n      ba: 0.7,\n      hr: 0.3,\n    },\n  },\n  {\n    id: '1-a-1440',\n    title: '活躍するエンジニアに共通する7つの特徴',\n    speaker: '小林篤',\n    genre: ['hr', 'en'],\n    content: 'hogehoge',\n    date: 'day1',\n    time: new Date(2021, 2, 11, 14, 40).toString(),\n    label: {\n      hr: 1.0,\n    },\n  },\n  {\n    id: '1-b-1440',\n    title: '難攻不落の未踏峰に挑む',\n    speaker: '水上廣敏',\n    genre: ['bu'],\n    content: 'hogehoge',\n    date: 'day1',\n    time: new Date(2021, 2, 11, 14, 40).toString(),\n    label: {\n      ba: 1.0,\n      hr: 0.7,\n      fu: 0.3,\n    },\n  },\n  {\n    id: '1-c-1440',\n    title: '今あえてゲームエンジニアになる理由',\n    speaker: '田中泰生',\n    genre: ['ga', 'en'],\n    content: 'hogehoge',\n    date: 'day1',\n    time: new Date(2021, 2, 11, 14, 40).toString(),\n    label: {\n      fu: 1.0,\n      en: 0.7,\n      hr: 0.3,\n    },\n  },\n  {\n    id: '1-a-1550',\n    title: 'Matzに聞きたい100のこと',\n    speaker: 'まつもとゆきひろ',\n    genre: ['ot'],\n    content: 'hogehoge',\n    date: 'day1',\n    time: new Date(2021, 2, 11, 15, 50).toString(),\n    label: {\n      ma: 1.0,\n    },\n  },\n  {\n    id: '1-b-1550',\n    title: 'RedCoderのライブ競プロ',\n    speaker: '高橋直大',\n    genre: ['cp'],\n    content: 'hogehoge',\n    date: 'day1',\n    time: new Date(2021, 2, 11, 15, 50).toString(),\n    label: {\n      cp: 1.0,\n      de: 0.7,\n      ba: 0.3,\n    },\n  },\n  {\n    id: '1-a-1700',\n    title: 'エンジニアとしてどう生きていくか',\n    speaker: '藤本真樹',\n    genre: ['en'],\n    content: 'hogehoge',\n    date: 'day1',\n    time: new Date(2021, 2, 11, 17, 0).toString(),\n    label: {\n      hr: 1.0,\n      fu: 0.7,\n      ba: 0.3,\n    },\n  },\n  {\n    id: '1-b-1700',\n    title: '競プロスキルでビジネス無双',\n    speaker: '塚本祥太',\n    genre: ['cp', 'bu'],\n    content: 'hogehoge',\n    date: 'day1',\n    time: new Date(2021, 2, 11, 17, 0).toString(),\n    label: {\n      cp: 1.0,\n      ba: 0.7,\n      hr: 0.3,\n    },\n  },\n  {\n    id: '1-c-1700',\n    title: '開局後5年のABEMAの裏側に広がるエンジニアリングの世界',\n    speaker: '西尾亮太',\n    genre: ['en', 'bu'],\n    content: 'hogehoge',\n    date: 'day1',\n    time: new Date(2021, 2, 11, 17, 0).toString(),\n    label: {\n      ba: 1.0,\n      en: 0.7,\n      hr: 0.3,\n    },\n  },\n  {\n    id: '2-b-1330',\n    title: '無駄なものをつくって稼ぐ方法',\n    speaker: '藤原麻里菜',\n    genre: ['bu'],\n    content: 'hogehoge',\n    date: 'day2',\n    time: new Date(2021, 2, 12, 13, 30).toString(),\n    label: {\n      ma: 1.0,\n      en: 0.7,\n      wo: 0.3,\n    },\n  },\n  {\n    id: '2-c-1330',\n    title: '新技術への向き合い方',\n    speaker: '中出匠哉',\n    genre: ['ot'],\n    content: 'hogehoge',\n    date: 'day2',\n    time: new Date(2021, 2, 12, 13, 30).toString(),\n    label: {\n      fu: 1.0,\n      en: 0.7,\n      hr: 0.3,\n    },\n  },\n  {\n    id: '2-a-1440',\n    title: '「市場価値の高いエンジニア」ってどんなエンジニア？',\n    speaker: '外山英幸',\n    genre: ['hr', 'en'],\n    content: 'hogehoge',\n    date: 'day2',\n    time: new Date(2021, 2, 12, 14, 40).toString(),\n    label: {\n      hr: 1.0,\n      ba: 0.7,\n    },\n  },\n  {\n    id: '2-b-1440',\n    title: 'Goライブコーディング',\n    speaker: '鈴木健太',\n    genre: ['ot'],\n    content: 'hogehoge',\n    date: 'day2',\n    time: new Date(2021, 2, 12, 14, 40).toString(),\n    label: {\n      de: 1.0,\n    },\n  },\n  {\n    id: '2-a-1550',\n    title: '超就活術',\n    speaker: '片岡俊行',\n    genre: ['hr'],\n    content: 'hogehoge',\n    date: 'day2',\n    time: new Date(2021, 2, 12, 15, 50).toString(),\n    label: {\n      hr: 1.0,\n      ba: 0.7,\n      en: 0.3,\n    },\n  },\n  {\n    id: '2-b-1550',\n    title: 'これから必要とされるエンジニアになるために、知っておくべきこと',\n    speaker: '岡本邦宏',\n    genre: ['en'],\n    content: 'hogehoge',\n    date: 'day2',\n    time: new Date(2021, 2, 12, 15, 50).toString(),\n    label: {\n      fu: 1.0,\n    },\n  },\n  {\n    id: '2-c-1550',\n    title: 'CTOと一緒におしゃべりしましょう！',\n    speaker: '村瀬龍馬',\n    genre: ['ot'],\n    content: 'hogehoge',\n    date: 'day2',\n    time: new Date(2021, 2, 12, 15, 50).toString(),\n    label: {\n      ba: 1.0,\n      en: 0.7,\n      hr: 0.3,\n    },\n  },\n  {\n    id: '2-a-1700',\n    title:\n      '[1部] 今求められる21世紀型エンジニアに必要なこと [2部] 大好評につき今年も開催！若手6人のぶっちゃけトーク',\n    speaker: '長瀬慶重',\n    genre: ['en', 'hr'],\n    content: 'hogehoge',\n    date: 'day2',\n    time: new Date(2021, 2, 12, 17, 0).toString(),\n    label: {\n      fu: 1.0,\n      ba: 0.7,\n      hr: 0.3,\n    },\n  },\n  {\n    id: '3-a-1100',\n    title:\n      '日本のけしからん行政系機関や大企業でけしからんサイバー技術開発を行なうことについて',\n    speaker: '登大遊',\n    genre: ['ot'],\n    content: 'hogehoge',\n    date: 'day3',\n    time: new Date(2021, 2, 13, 11, 0).toString(),\n    label: {\n      fu: 1.0,\n      ba: 0.7,\n    },\n  },\n  {\n    id: '3-b-1100',\n    title:\n      'スーパーコンピュータ富岳による10万ノード級のAIとSociety5.0へのインパクト',\n    speaker: '松岡聡',\n    genre: ['ml'],\n    content: 'hogehoge',\n    date: 'day3',\n    time: new Date(2021, 2, 13, 11, 0).toString(),\n    label: {\n      fu: 1.0,\n    },\n  },\n  {\n    id: '3-a-1330',\n    title: 'CTOが語る、学生が個人開発でイケてる成果物を作るコツ',\n    speaker: '小賀昌法',\n    genre: ['we', 'hr'],\n    content: 'hogehoge',\n    date: 'day3',\n    time: new Date(2021, 2, 13, 13, 30).toString(),\n    label: {\n      hr: 1.0,\n      ma: 0.7,\n      ba: 0.3,\n    },\n  },\n  {\n    id: '3-b-1330',\n    title: 'これからのエンジニア/これからのDMM',\n    speaker: '大久保寛',\n    genre: ['en', 'we'],\n    content: 'hogehoge',\n    date: 'day3',\n    time: new Date(2021, 2, 13, 13, 30).toString(),\n    label: {\n      ba: 1.0,\n      fu: 0.7,\n      hr: 0.3,\n    },\n  },\n  {\n    id: '3-a-1440',\n    title: '2年で3億7000万人に遊ばれるスマホゲームの作り方',\n    speaker: '田中泰生',\n    genre: ['ga'],\n    content: 'hogehoge',\n    date: 'day3',\n    time: new Date(2021, 2, 13, 14, 40).toString(),\n    label: {\n      fu: 1.0,\n      en: 0.7,\n      hr: 0.3,\n    },\n  },\n  {\n    id: '3-b-1440',\n    title: 'ただプログラマでありたい',\n    speaker: '成瀬允宣',\n    genre: ['en'],\n    content: 'hogehoge',\n    date: 'day3',\n    time: new Date(2021, 2, 13, 14, 40).toString(),\n    label: {\n      hr: 1.0,\n    },\n  },\n  {\n    id: '3-a-1550',\n    title: '技術書執筆のススメ',\n    speaker: '澁川喜規',\n    genre: ['ot'],\n    content: 'hogehoge',\n    date: 'day3',\n    time: new Date(2021, 2, 13, 15, 50).toString(),\n    label: {\n      ma: 1.0,\n      hr: 0.7,\n      ba: 0.3,\n    },\n  },\n  {\n    id: '3-a-1700',\n    title: 'ひろゆきだけど何か質問ある？',\n    speaker: 'ひろゆき',\n    genre: ['ot'],\n    content: 'hogehoge',\n    date: 'day3',\n    time: new Date(2021, 2, 13, 17, 0).toString(),\n    label: {\n      fu: 1.0,\n    },\n  },\n  {\n    id: '3-b-1700',\n    title: 'プログラミング以外にも重要なこと',\n    speaker: '是澤太志、橋本善久、生内洋平',\n    genre: ['ot'],\n    content: 'hogehoge',\n    date: 'day3',\n    time: new Date(2021, 2, 13, 17, 0).toString(),\n    label: {\n      hr: 1.0,\n      ba: 0.7,\n      fu: 0.3,\n    },\n  },\n  {\n    id: '3-c-1550',\n    title: 'これからの時代に必要な技術力',\n    speaker: '横路隆',\n    genre: ['en'],\n    content: 'hogehoge',\n    date: 'day3',\n    time: new Date(2021, 2, 13, 15, 50).toString(),\n    label: {\n      fu: 1.0,\n      hr: 0.7,\n      en: 0.3,\n    },\n  },\n];\n","import { FC, useState } from 'react';\n\nimport RecommendTalk from '../../components/pages/RecommendTalk';\nimport { interest, Talk, talks } from '../../data/dummy-data';\n\nconst EnhancedRecommendTalk: FC = () => {\n  const [interestedGenre1, setInterestedGenre1] = useState('');\n  const [interestedGenre2, setInterestedGenre2] = useState('');\n  const [interestedGenre3, setInterestedGenre3] = useState('');\n  const [recommendedResult, setResult] = useState<Talk[]>([]);\n\n  const handleGenreChange1 = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setInterestedGenre1(event.target.value as string);\n  };\n  const handleGenreChange2 = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setInterestedGenre2(event.target.value as string);\n  };\n  const handleGenreChange3 = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setInterestedGenre3(event.target.value as string);\n  };\n  const search = () => {\n    setResult(\n      talks.filter((talk) => {\n        let score = 0;\n        score +=\n          (talk.label[interestedGenre1] ?? 0) +\n          (talk.label[interestedGenre2] ?? 0) +\n          (talk.label[interestedGenre3] ?? 0);\n\n        return score >= 0.9;\n      }),\n    );\n  };\n\n  return (\n    <RecommendTalk\n      genre={interest}\n      interestedGenre1={interestedGenre1}\n      interestedGenre2={interestedGenre2}\n      interestedGenre3={interestedGenre3}\n      recommendedResult={recommendedResult}\n      handleGenreChange1={handleGenreChange1}\n      handleGenreChange2={handleGenreChange2}\n      handleGenreChange3={handleGenreChange3}\n      search={search}\n    />\n  );\n};\nexport default EnhancedRecommendTalk;\n","import { FC } from 'react';\nimport {\n  Button,\n  FormControl,\n  Select,\n  MenuItem,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n} from '@material-ui/core';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\n\nimport ShowResult from '../../containers/organisms/ShowResult';\nimport type { Item, Talk } from '../../data/dummy-data';\nimport './SearchTalk.css';\n\ntype Props = {\n  genre: Item[];\n  date: Item[];\n  selectedGenre: string;\n  selectedDate: string;\n  searchedResult: Talk[];\n  handleGenreChange: (event: React.ChangeEvent<{ value: unknown }>) => void;\n  handleDateChange: (event: React.ChangeEvent<{ value: unknown }>) => void;\n  search: () => void;\n};\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    form: {\n      minWidth: 120,\n    },\n    table: {\n      maxWidth: 600,\n    },\n    large: {\n      fontSize: 'large',\n    },\n  }),\n);\n\nconst SearchTalk: FC<Props> = ({\n  genre = [],\n  date = [],\n  selectedGenre = '',\n  selectedDate = '',\n  searchedResult = [],\n  handleGenreChange = () => undefined,\n  handleDateChange = () => undefined,\n  search = () => undefined,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <>\n      <TableContainer>\n        <Table className={classes.table} aria-label=\"table\">\n          <TableBody>\n            <TableRow key=\"genrerow\">\n              <TableCell className={classes.large}>ジャンル</TableCell>\n              <TableCell align=\"right\">\n                <span className=\"second-column\">\n                  <FormControl className={classes.form}>\n                    <Select value={selectedGenre} onChange={handleGenreChange}>\n                      {genre.map((item) => (\n                        <MenuItem value={item.id} key={item.id}>\n                          {item.name}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n                </span>\n              </TableCell>\n            </TableRow>\n            <TableRow key=\"daterow\">\n              <TableCell className={classes.large}>日付</TableCell>\n              <TableCell align=\"right\">\n                <span className=\"second-column\">\n                  <FormControl className={classes.form}>\n                    <Select value={selectedDate} onChange={handleDateChange}>\n                      {date.map((item) => (\n                        <MenuItem value={item.id} key={item.id}>\n                          {item.name}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n                </span>\n              </TableCell>\n            </TableRow>\n            <TableRow key=\"searchrow\">\n              <TableCell />\n              <TableCell align=\"right\">\n                <Button\n                  className={classes.large}\n                  color=\"primary\"\n                  variant=\"contained\"\n                  onClick={search}\n                >\n                  検索\n                </Button>\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <ShowResult talks={searchedResult} />\n    </>\n  );\n};\n\nexport default SearchTalk;\n","import { FC, useState } from 'react';\n\nimport SearchTalk from '../../components/pages/SearchTalk';\nimport { genre, date, talks, Talk } from '../../data/dummy-data';\n\nconst EnhancedSearchTalk: FC = () => {\n  const [selectedGenre, setSelectedGenre] = useState('');\n  const [selectedDate, setSelectedDate] = useState('');\n  const [searchedResult, setResult] = useState<Talk[]>([]);\n\n  const handleGenreChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setSelectedGenre(event.target.value as string);\n  };\n  const handleDateChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setSelectedDate(event.target.value as string);\n  };\n\n  const search = () => {\n    setResult(\n      talks.filter(\n        (talk) =>\n          talk.genre.some((id) => id === selectedGenre) &&\n          talk.date === selectedDate,\n      ),\n    );\n  };\n\n  return (\n    <SearchTalk\n      genre={genre}\n      date={date}\n      selectedGenre={selectedGenre}\n      selectedDate={selectedDate}\n      searchedResult={searchedResult}\n      handleGenreChange={handleGenreChange}\n      handleDateChange={handleDateChange}\n      search={search}\n    />\n  );\n};\nexport default EnhancedSearchTalk;\n","import { FC } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport { Search, Notifications, Done } from '@material-ui/icons';\nimport './MenuBar.css';\n\nconst MenuBar: FC = () => (\n  <>\n    <Button color=\"primary\" size=\"large\" component={RouterLink} to=\"/\">\n      <Search fontSize=\"large\" color=\"primary\" />\n      <span className=\"emphasizedText\">探す</span>\n    </Button>\n    <Button\n      color=\"primary\"\n      size=\"medium\"\n      component={RouterLink}\n      to=\"/recommend\"\n    >\n      <Done fontSize=\"large\" color=\"primary\" />\n      <span className=\"emphasizedText\">おすすめ</span>\n    </Button>\n    <Button color=\"primary\" size=\"medium\" component={RouterLink} to=\"/notify\">\n      <Notifications fontSize=\"large\" color=\"primary\" />\n      <span className=\"emphasizedText\">通知</span>\n    </Button>\n    <Divider />\n  </>\n);\n\nexport default MenuBar;\n","export default __webpack_public_path__ + \"static/media/sorry.cede74d8.webp\";","import { FC } from 'react';\nimport './NotFound.css';\nimport sorry from '../../public/sorry.webp';\n\nconst NotFound: FC = () => (\n  <div className=\"Notfoundpage\">\n    お探しのページは見つかりませんでした\n    <img src={sorry} alt=\"\" />\n  </div>\n);\n\nexport default NotFound;\n","import { FC } from 'react';\nimport Alert from '@material-ui/lab/Alert';\n\ntype Props = {\n  permitted: boolean;\n};\n\nconst NotifyTimer: FC<Props> = ({ permitted = false }) => {\n  if (permitted) return <></>;\n\n  return <Alert severity=\"warning\">通知がオフになっています</Alert>;\n};\n\nexport default NotifyTimer;\n","/* eslint-disable no-console */\nimport { FC, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport Push from 'push.js';\n\nimport NotifyTimer from '../../components/pages/NotifyTimer';\nimport { NoticeState } from '../../features/manageNotice';\nimport type { Talk } from '../../data/dummy-data';\n\nconst EnhancedNotifyTimer: FC = () => {\n  const [permitted, setPermission] = useState(false);\n  const [notifiedTalk, setNotified] = useState<{ [id: string]: Talk }>({});\n  const notices = useSelector<NoticeState, { [id: string]: Talk }>(\n    (state) => state.noticeList,\n  );\n\n  const check = (\n    _notices: { [id: string]: Talk },\n    _notifiedTalk: { [id: string]: Talk },\n  ): void => {\n    const upcomingTalk = Object.values(_notices).filter((talk) => {\n      const time = new Date(talk.time);\n      const now = new Date();\n\n      return (\n        now <= time && Math.abs(now.getTime() - time.getTime()) <= 5 * 60 * 1000\n      );\n    });\n\n    if (upcomingTalk.length) {\n      upcomingTalk.forEach((talk) => {\n        if (!(talk.id in _notifiedTalk)) {\n          Push.create(`${upcomingTalk[0].title}がまもなく始まります`, {\n            timeout: 5000,\n          }).catch((e) => console.error(e));\n\n          setNotified((t) => ({ ...t, [talk.id]: talk }));\n        }\n      });\n    }\n  };\n\n  useEffect(() => {\n    Push.Permission.request(\n      () => setPermission(() => true),\n      () => setPermission(() => false),\n    );\n  }, []);\n\n  useEffect(() => {\n    const timer = setInterval(() => check(notices, notifiedTalk), 10000);\n\n    return () => clearInterval(timer);\n  }, [notices, notifiedTalk]);\n\n  return <NotifyTimer permitted={permitted} />;\n};\n\nexport default EnhancedNotifyTimer;\n","import { FC } from 'react';\nimport { Route, Switch } from 'react-router';\n\nimport Notify from './containers/pages/Notify';\nimport RecommendTalk from './containers/pages/RecommendTalk';\nimport SearchTalk from './containers/pages/SearchTalk';\nimport MenuBar from './components/pages/MenuBar';\nimport NotFound from './components/pages/NotFound';\nimport NotifyTimer from './containers/pages/NotifyTimer';\n\nconst App: FC = () => (\n  <div>\n    <span>\n      <MenuBar />\n    </span>\n    <NotifyTimer />\n    <br />\n    <Switch>\n      <Route exact path=\"/\">\n        <SearchTalk />\n      </Route>\n      <Route exact path=\"/recommend\">\n        <RecommendTalk />\n      </Route>\n      <Route exact path=\"/notify\">\n        <Notify />\n      </Route>\n      <Route component={NotFound} />\n    </Switch>\n  </div>\n);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals')\n      .then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n        getCLS(onPerfEntry);\n        getFID(onPerfEntry);\n        getFCP(onPerfEntry);\n        getLCP(onPerfEntry);\n        getTTFB(onPerfEntry);\n      })\n      .catch((err) => console.error(err)); // eslint-disable-line no-console\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { configureStore } from '@reduxjs/toolkit';\nimport { Provider } from 'react-redux';\n\nimport { noticeSlice } from './features/manageNotice';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\n\nconst store = configureStore({ reducer: noticeSlice.reducer });\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}